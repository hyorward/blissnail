from aiogram import Bot, Dispatcher, executor, types
from aiogram.types import ReplyKeyboardMarkup
from dotenv import load_dotenv
import os

load_dotenv()
bot = Bot(os.getenv('TOKEN'))
dp = Dispatcher(bot=bot)


markup = ReplyKeyboardMarkup(resize_keyboard=True)
markup.add('–ö–∞—Ç–∞–ª–æ–≥ üóÇ').add('–ö–æ—Ä–∑–∏–Ω–∞ üóë').add('–ö–æ–Ω—Ç–∞–∫—Ç—ã üì±')

markup_admin = ReplyKeyboardMarkup(resize_keyboard=True)
markup_admin.add('–ö–∞—Ç–∞–ª–æ–≥ üóÇ').add('–ö–æ—Ä–∑–∏–Ω–∞ üóë').add('–ö–æ–Ω—Ç–∞–∫—Ç—ã üì±').add('–ê–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å')

admin_panel = ReplyKeyboardMarkup(resize_keyboard=True)
admin_panel.add('–î–æ–±–∞–≤–∏—Ç—å —É—Å–ª—É–≥—É').add('–£–¥–∞–ª–∏—Ç—å —É—Å–ª—É–≥—É').add('–ò–∑–º–µ–Ω–∏—Ç—å —É—Å–ª—É–≥—É').add('–°–¥–µ–ª–∞—Ç—å —Ä–∞—Å—Å—ã–ª–∫—É')


@dp.message_handler(commands=['start'])
async def start(message: types.Message):
    await message.answer_sticker('CAACAgIAAxkBAAM-ZSFTRW85SHQfYXKZEe2UAfnq6KMAAtwFAAI_lcwK8V_szGQXFZcwBA')
    await message.answer(f' <em>{message.from_user.first_name}, –¥–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –æ–Ω–ª–∞–π–Ω-—Å–∞–ª–æ–Ω –º–∞–Ω–∏–∫—é—Ä–∞ <b>"BLISS"</b>! </em>', reply_markup=markup, parse_mode="html")
    if message.from_user.id == int(os.getenv('ADMIN_ID_1')) or message.from_user.id == int(os.getenv('ADMIN_ID_2')):
        await message.answer(f'–í—ã –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–ª–∏—Å—å –∫–∞–∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä!', reply_markup=markup_admin)


@dp.message_handler(commands=['id'])
async def admin_id(message: types.Message):
    await message.answer(f'{message.from_user.id}')


@dp.message_handler(text='–ö–∞—Ç–∞–ª–æ–≥ üóÇ')
async def catalog(message: types.Message):
    await message.answer(f'<em>–í –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –∫–∞—Ç–∞–ª–æ–≥ –ø—É—Å—Ç(</em>', parse_mode="html")


@dp.message_handler(text='–ö–æ—Ä–∑–∏–Ω–∞ üóë')
async def cart(message: types.Message):
    await message.answer(f'<em>–ö–æ—Ä–∑–∏–Ω–∞ –ø—É—Å—Ç–∞!</em>', parse_mode="html")


@dp.message_handler(text='–ö–æ–Ω—Ç–∞–∫—Ç—ã üì±')
async def contacts(message: types.Message):
    await message.answer(f'<em>–ü–æ –≤—Å–µ–º –≤–æ–ø—Ä–æ—Å–∞–º –æ–±—Ä–∞—â–∞–π—Ç–µ—Å—å –∫ –Ω–∞—à–µ–º—É –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É: @miytiiiii</em>', parse_mode="html")


@dp.message_handler(text='–ê–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å')
async def admin(message: types.Message):
    if message.from_user.id == int(os.getenv('ADMIN_ID_1')) or message.from_user.id == int(os.getenv('ADMIN_ID_2')):
        await message.answer(f'–í—ã –≤–æ—à–ª–∏ –≤ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å', reply_markup=admin_panel)
    else:
        await message.reply('–Ø –≤–∞—Å –Ω–µ –ø–æ–Ω–∏–º–∞—é.')


@dp.message_handler()
async def answer(message: types.Message):
    await message.reply('–Ø –≤–∞—Å –Ω–µ –ø–æ–Ω–∏–º–∞—é.')


if __name__ == '__main__':
    executor.start_polling(dp)